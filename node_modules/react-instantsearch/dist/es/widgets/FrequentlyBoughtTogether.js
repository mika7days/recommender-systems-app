var _excluded = ["objectIDs", "limit", "threshold", "queryParameters", "escapeHTML", "transformItems", "itemComponent", "headerComponent", "emptyComponent"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { createFrequentlyBoughtTogetherComponent } from 'instantsearch-ui-components';
import React, { createElement, Fragment } from 'react';
import { useFrequentlyBoughtTogether, useInstantSearch } from 'react-instantsearch-core';
var FrequentlyBoughtTogetherUiComponent = createFrequentlyBoughtTogetherComponent({
  createElement: createElement,
  Fragment: Fragment
});
export function FrequentlyBoughtTogether(_ref) {
  var objectIDs = _ref.objectIDs,
    limit = _ref.limit,
    threshold = _ref.threshold,
    queryParameters = _ref.queryParameters,
    escapeHTML = _ref.escapeHTML,
    transformItems = _ref.transformItems,
    itemComponent = _ref.itemComponent,
    headerComponent = _ref.headerComponent,
    emptyComponent = _ref.emptyComponent,
    props = _objectWithoutProperties(_ref, _excluded);
  var _useInstantSearch = useInstantSearch(),
    status = _useInstantSearch.status;
  var _useFrequentlyBoughtT = useFrequentlyBoughtTogether({
      objectIDs: objectIDs,
      limit: limit,
      threshold: threshold,
      queryParameters: queryParameters,
      escapeHTML: escapeHTML,
      transformItems: transformItems
    }, {
      $$widgetType: 'ais.frequentlyBoughtTogether'
    }),
    items = _useFrequentlyBoughtT.items;
  var uiProps = {
    items: items,
    itemComponent: itemComponent,
    headerComponent: headerComponent,
    emptyComponent: emptyComponent,
    status: status,
    sendEvent: function sendEvent() {}
  };
  return /*#__PURE__*/React.createElement(FrequentlyBoughtTogetherUiComponent, _extends({}, props, uiProps));
}